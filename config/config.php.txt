<?php

error_reporting(E_ALL);
ini_set('display_errors', 1);

global $router;
global $config;
global $db;

/* Default settings */

$config['http_host'] = $_SERVER['HTTP_HOST'];
$config['base_path'] = dirname($_SERVER['PHP_SELF']);
$config['base_url']  = 'http://' . $config['http_host'] . $config['base_path'];

/* Global defines */

define('APP_DIR'      , ROOT_DIR . 'app/');
define('LIBS'         , ROOT_DIR . 'libs/');
define('CONTROLLERS'  , APP_DIR  . 'controllers/');
define('VIEW'         , APP_DIR  . 'views/');
define('MODELS'       , APP_DIR  . 'models/');
define('BASE_URL'     , $config['base_url']);
define('PUBLIC_FOLDER', $config['base_url'] . "public/");

/* Database settings */

$db['user']          = '';
$db['password']      = '';
$db['server']        = '';
$db['db_name']       = '';

/* System require */

require(ROOT_DIR . 'system/View.php');
require(ROOT_DIR . 'system/Controller.php');
require(ROOT_DIR . 'system/AltoRouter.php');
require(ROOT_DIR . 'system/Application.php');
require(ROOT_DIR . 'system/ActiveRecord.php');

/* ActiveRecord setup */
ActiveRecord\Config::initialize(function($cfg) {
  global $db;
  $cfg->set_model_directory(MODELS);
  $cfg->set_connections(
    array(
      'development' => 'mysql://'.$db['user'].':'.$db['password'].'@'.$db['server'].'/'.$db['db_name'].''
    )
  ); 
});

/* Custom class auto loader */

function activerecord_autoload($class_name) {
  $path = ActiveRecord\Config::instance()->get_model_directory();
  $root = realpath(isset($path) ? $path : '.');

  if (($namespaces = ActiveRecord\get_namespaces($class_name))) {
    $class_name = array_pop($namespaces);
    $directories = array();
    foreach ($namespaces as $directory) {
      $directories[] = $directory;
    }
    $root .= DIRECTORY_SEPARATOR . implode($directories, DIRECTORY_SEPARATOR);
  }

  # TODO: REFACTOR THIS

  $file           = "$root/$class_name.php";
  $loadController = CONTROLLERS . $class_name . ".php";
  $loadLib        = LIBS        . $class_name . ".php";

  if (file_exists($file)) { require $file; }
  if (file_exists($loadController)) { require $loadController; }
  if (file_exists($loadLib)) { require $loadLib; }
}
